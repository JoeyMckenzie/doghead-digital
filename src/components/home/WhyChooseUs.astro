---
import { Icon } from 'astro-icon/components';

const perks = [
  {
    title: 'Custom Code',
    description:
      'No website builders or admin panels. Your website is 100% crafted by hand, custom-tailored to your brand and business.',
    icon: 'ph:code',
  },
  {
    title: 'Mobile Friendly',
    description:
      "Most of today's traffic comes from mobile devices. Your website will be mobile friendly with a design you'll love.",
    icon: 'cil:mobile',
  },
  {
    title: 'Anytime Updates',
    description:
      "Want to make some changes to your website? Not a problem, contact us anytime we'll handle it that same day.",
    icon: 'mdi:pencil-outline',
  },
  {
    title: 'Managed Hosting',
    description:
      'Let your servers be our problem. We maintain, manage, and make sure your server hosts are safe.',
    icon: 'uil:servers',
  },
  {
    title: 'Peak Performance',
    description:
      "We're obsessed with performance and guarantee near-perfect Lighthouse scores in every category.",
    icon: 'material-symbols:speed-outline',
  },
  {
    title: 'Analytics Amplified',
    description:
      'We handle Google Insights and Google Site Verification to ensure your website outshines your competitors and is always up-to-date.',
    icon: 'ic:baseline-query-stats',
  },
];
---

<section id="services-346">
  <div class="cs-container">
    <div class="cs-content">
      <span class="cs-topper">Custom Web Design</span>
      <h2 class="cs-title">
        Month-to-month or one-time payments, there's a plan for everyone
      </h2>
      <p class="cs-text">
        We offer different pricing models to suit you and your business. From
        monthly plans starting at $150 to one-time payments, we'll work with you
        to offer a plan that fits your needs.
      </p>
    </div>
    <ul class="cs-card-group">
      {
        perks.map(({ title, description, icon }) => (
          <li class="cs-item">
            <a href="" class="cs-link">
              <div class="cs-picture">
                <Icon name={icon} class="cs-icon" size={48} />
              </div>
              <h3 class="cs-h3">{title}</h3>
              <p class="cs-item-text">{description}</p>
            </a>
          </li>
        ))
      }
    </ul>
    <a href="" class="cs-button-solid">Let's Talk!</a>
  </div>
</section>

<style lang="scss">
  /* Mobile - 360px */
  @media only screen and (width >= 0) {
    #services-346 {
      padding: var(--sectionPadding);

      .cs-container {
        width: 100%;
        max-width: calc(1280 / 16 * 1rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;

        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;

        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
      }

      .cs-card-group {
        width: 100%;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-flow: column wrap;

        /* 16px - 20px */
        gap: clamp(1rem, 2vw, 1.25rem);
      }

      .cs-item {
        list-style: none;
        width: 100%;
        max-width: calc(500 / 16 * 1rem);

        /* 32px - 40px top & bottom */

        /* 28px - 40px left & right */
        padding: clamp(2rem, 3vw, 2.5rem) clamp(1.75rem, 3vw, 2.5rem);
        border-radius: calc(16 / 16 * 1rem);
        border: 1px solid #e8e8e8;
        box-sizing: border-box;
        transition:
          background-color 0.3s,
          transform 0.3s,
          box-shadow 0.3s;

        &:hover {
          background-color: #fff;
          box-shadow: rgb(149 157 165 / 20%) 0 8px 50px;
          transform: translateY(calc(-7 / 16 * 1rem));

          .cs-picture {
            &::before {
              width: 100%;
              height: 100%;
              opacity: 1;
            }
          }
        }
      }

      .cs-link {
        text-decoration: none;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
      }

      .cs-picture {
        width: calc(80 / 16 * 1rem);
        height: calc(80 / 16 * 1rem);
        margin: 0;
        margin-bottom: calc(24 / 16 * 1rem);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        background-color: var(--primary);
        position: relative;
        z-index: 1;
      }

      .cs-icon {
        height: calc(32 / 16 * 1rem);
        width: auto;
      }

      .cs-h3 {
        font-size: calc(20 / 16 * 1rem);
        font-weight: 900;
        text-align: center;
        line-height: 1.2em;
        margin: 0;
        margin-bottom: calc(12 / 16 * 1rem);
        color: var(--headerColor);
        transition: color 0.3s;
      }

      .cs-item-text {
        font-size: calc(16 / 16 * 1rem);
        text-align: center;
        line-height: 1.5em;
        margin: 0;
        color: var(--bodyTextColor);
        transition: color 0.3s;
      }

      .cs-button-solid {
        font-size: calc(16 / 16 * 1rem);

        /* 46px - 56px */
        line-height: clamp(2.875rem, 5.5vw, 3.5rem);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: #fff;
        min-width: calc(150 / 16 * 1rem);
        padding: 0 calc(24 / 16 * 1rem);
        background-color: var(--primary);
        border-radius: calc(4 / 16 * 1rem);
        display: inline-block;
        position: relative;
        z-index: 1;

        /* prevents padding from adding to the width */
        box-sizing: border-box;

        &::before {
          content: '';
          position: absolute;
          height: 100%;
          width: 0%;
          background: #000;
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          border-radius: calc(4 / 16 * 1rem);
          transition: width 0.3s;
        }

        &:hover {
          &::before {
            width: 100%;
          }
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (width >= 48rem) {
    #services-346 {
      .cs-card-group {
        flex-direction: row;
        justify-content: center;
      }

      .cs-item {
        /* we do this so it's stackable. You can add new any number of reviews you want and they will stack and center in the middle. We dont use grid because if you have an odd number of reviews, they don't stay centered.  They align with their grid lines. If you want 4 reviews in a row, lower the width under 22.5vw or 23% to get the desired sizes fit 4 in a row and then stack when you add more */
        width: clamp(31.85%, 30.5vw, 32.28%);
      }
    }
  }

  /* Dark Mode */
  @media only screen and (width >= 0) {
    body.dark-mode {
      #services-346 {
        .cs-topper {
          color: var(--primaryLight);
        }

        .cs-title,
        .cs-text,
        .cs-h3,
        .cs-item-text {
          color: var(--bodyTextColorWhite);
        }

        .cs-picture {
          background-color: var(--medium);
        }

        .cs-item {
          position: relative;
          transition:
            background-color 0.3s,
            transform 0.3s;

          &:hover {
            background-color: var(--accent);

            &::before {
              opacity: 1;
            }

            .cs-h3,
            .cs-item-text {
              color: #fff;
            }
          }
        }
      }
    }
  }
</style>
