---
import { Icon } from 'astro-icon/components';

interface PricingPlanDetails {
  product: string;
  price: number;
  description: string;
  includedServices: string[];
}

interface PricingPlans {
  singleProject: PricingPlanDetails;
  subscription: PricingPlanDetails;
}

const pricingPlans: PricingPlans = {
  singleProject: {
    product: 'Lump Sum',
    price: 3000,
    description:
      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed gravida, ex in commodo euismod, justo nisi bibendum libero',
    includedServices: [
      '5-Page Website Design',
      'Mobile-First, Responsive Design',
      'Custom Coded Development, From Scratch',
      'Hosting, Domain, and SSL certificate Included',
      'Contact Form Integration',
      'Dark Mode',
      'Google Business Profile Setup and Maps Listing',
    ],
  },
  subscription: {
    product: 'Monthly Subscription',
    price: 150,
    description:
      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed gravida, ex in commodo euismod, justo nisi bibendum libero',
    includedServices: [
      'Everything in Lump Sum Pricing',
      'Unlimited Stock Images (If Needed)',
      'Unlimited Edits',
      '1x Business Email',
      '24/7 Support',
      '5 Working-Day SLA',
      'Website Redesign Every 3 Years',
    ],
  },
};
---

<section id="pricing-1260">
  <div class="cs-container">
    <div class="cs-content">
      <span class="cs-topper">Pricing</span>
      <h2 class="cs-title">Transparent Pricing Options to Fit Your Budget</h2>
      <p class="cs-text">
        We believe in transparency when it comes to pricing. We offer monthly
        and lump sum packages to meet your specific needs and budget.
      </p>
      <a href="/contact" class="cs-button-solid">Get a Free Consultation</a>
    </div>
    <ul class="cs-card-group">
      <li class="cs-item">
        <picture class="cs-picture">
          <Icon class="cs-picture-icon" name="mdi:cart-variant" size={44} />
        </picture>
        <span class="cs-package">{pricingPlans.singleProject.product}</span>
        <span class="cs-price">
          ${pricingPlans.singleProject.price}
          <span class="cs-duration"></span>
        </span>
        <p class="cs-item-text">
          {pricingPlans.singleProject.description}
        </p>
        <ul class="cs-ul">
          {
            pricingPlans.singleProject.includedServices.map((service) => (
              <li class="cs-li">
                <Icon
                  size={18}
                  class="cs-icon text-green-500"
                  name="mdi:check-circle"
                />
                {service}
              </li>
            ))
          }
        </ul>
        <a href="/pricing" class="cs-button-transparent">Learn More</a>
      </li>
      <li class="cs-item cs-popular">
        <picture class="cs-picture">
          <Icon
            class="cs-picture-icon text-white"
            name="mdi:calendar-month"
            size={44}
          />
        </picture>
        <span class="cs-package">{pricingPlans.subscription.product}</span>
        <span class="cs-price">
          ${pricingPlans.subscription.price}
          <span class="cs-duration">/month</span>
        </span>
        <p class="cs-item-text">
          {pricingPlans.subscription.description}
        </p>
        <ul class="cs-ul">
          {
            pricingPlans.subscription.includedServices.map((service) => (
              <li class="cs-li">
                <Icon
                  size={18}
                  class="cs-icon text-green-500"
                  name="mdi:check-circle"
                />
                {service}
              </li>
            ))
          }
        </ul>
        <a href="/pricing" class="cs-button-transparent">Learn More</a>
      </li>
    </ul>
    <picture class="cs-waves-wrapper">
      <img
        class="cs-waves"
        aria-hidden="true"
        loading="lazy"
        decoding="async"
        src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Graphics/svg-waves.svg"
        alt="waves"
        width="743"
        height="708"
      />
    </picture>
  </div>
</section>

<style lang="scss">
  /* Mobile - 360px */
  @media only screen and (width >= 0) {
    #pricing-1260 {
      padding: var(--sectionPadding);

      /* clips svg graphic from overflowing the section */
      overflow: hidden;
      position: relative;
      z-index: 1;

      .cs-container {
        width: 100%;

        /* changes to 1280px at desktop */
        max-width: 34.375em;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;

        /* 48px - 64px, changes to 20px at large desktop */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: left;
        width: 100%;
        max-width: calc(643 / 16 * 1rem);
        margin-right: auto;
        display: flex;
        flex-direction: column;

        /* centers content horizontally, set to flex-start to left align */
        align-items: flex-start;
      }

      .cs-text {
        margin-bottom: calc(16 / 16 * 1rem);

        &:last-of-type {
          margin-bottom: calc(32 / 16 * 1rem);
        }
      }

      .cs-button-solid {
        font-size: calc(16 / 16 * 1rem);

        /* 46px - 56px */
        line-height: clamp(2.875em, 5.5vw, 3.5em);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: #fff;
        min-width: calc(150 / 16 * 1rem);
        padding: 0 calc(24 / 16 * 1rem);
        background-color: var(--primary);
        overflow: hidden;
        border-radius: calc(4 / 16 * 1rem);
        display: inline-block;
        position: relative;
        z-index: 1;

        /* prevents padding from adding to the width */
        box-sizing: border-box;

        &::before {
          content: '';
          position: absolute;
          height: 100%;
          width: 0%;
          background: #000;
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          transition: width 0.3s;
        }

        &:hover {
          &::before {
            width: 100%;
          }
        }
      }

      .cs-card-group {
        width: 100%;
        margin: 0;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        align-items: center;

        /* prevents flexbox from squishing it */
        flex: none;
      }

      .cs-item {
        text-align: left;
        list-style: none;
        width: 100%;
        margin: 0;
        padding: calc(24 / 16 * 1rem);
        background-color: #fff;
        border: 1px solid #dad9e3;
        border-radius: calc(24 / 16 * 1rem) 0 0;

        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        align-items: stretch;
        position: relative;
        z-index: 1;

        &.cs-popular {
          background-color: #14142b;
          border-radius: 0 0 calc(24 / 16 * 1rem);
          border: none;

          .cs-popular-tag {
            display: inline-flex;
          }

          .cs-package,
          .cs-price,
          .cs-duration,
          .cs-item-text,
          .cs-li {
            color: var(--bodyTextColorWhite);
          }

          .cs-item-text,
          .cs-li {
            opacity: 0.8;
          }

          .cs-icon {
            filter: none;
            opacity: 1;
          }

          .cs-button-transparent {
            background-color: var(--primary);
            color: var(--bodyTextColorWhite);
            border: none;
            transition: color 0.3s;

            &::before {
              background-color: #fff;
            }

            &:hover {
              color: var(--primary);
            }
          }
        }
      }

      .cs-popular-tag {
        font-size: calc(14 / 16 * 1rem);
        line-height: 1.2em;
        text-align: center;
        width: auto;
        margin: 0;
        padding: calc(4 / 16 * 1rem) calc(12 / 16 * 1rem);
        box-sizing: border-box;
        color: #ff9b7d;
        overflow: hidden;
        border-radius: calc(4 / 16 * 1rem);
        display: none;
        justify-content: center;
        align-items: center;
        position: absolute;

        /* same as cs-item padding top */
        top: calc(24 / 16 * 1rem);
        right: calc(24 / 16 * 1rem);
        z-index: 1;

        &::before {
          /* background color overlay */
          content: '';
          width: 100%;
          height: 100%;
          background: var(--primary);
          opacity: 0.16;
          position: absolute;
          display: block;
          top: 0;
          left: 0;
          z-index: -1;
        }
      }

      .cs-picture {
        width: calc(76 / 16 * 1rem);
        height: calc(76 / 16 * 1rem);
        margin-bottom: calc(24 / 16 * 1rem);
        border-radius: 50%;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;

        &::before {
          /* background color */
          content: '';
          width: 100%;
          height: 100%;
          background: var(--primary);
          opacity: 0.2;
          position: absolute;
          display: block;
          top: 0;
          left: 0;
        }
      }

      .cs-package {
        font-size: calc(20 / 16 * 1rem);
        line-height: 1.2em;
        text-align: inherit;
        font-weight: 700;
        margin: 0 0 calc(8 / 16 * 1rem);
        color: var(--headerColor);
        display: block;
      }

      .cs-price {
        font-size: calc(39 / 16 * 1rem);
        line-height: 1.2em;
        text-align: inherit;
        font-weight: 900;
        margin: 0 0 calc(12 / 16 * 1rem);
        color: var(--headerColor);
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: calc(8 / 16 * 1rem);
      }

      .cs-duration {
        font-size: calc(14 / 16 * 1rem);
        line-height: 1.5em;
        font-weight: 400;
        margin: 0;
        color: var(--headerColor);
      }

      .cs-item-text {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        line-height: 1.5em;
        text-align: inherit;
        margin: 0 0 calc(32 / 16 * 1rem);
        color: var(--bodyTextColor);
      }

      .cs-ul {
        margin: 0 0 calc(32 / 16 * 1rem);
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: calc(8 / 16 * 1rem);
      }

      .cs-li {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        list-style: none;
        line-height: 1.5em;
        width: 100%;
        margin: 0;
        padding: 0;
        color: var(--bodyTextColor);
        display: flex;
        justify-content: flex-start;

        /* push everything to the top so if the li goes to two lines the icon stays at the top */
        align-items: flex-start;
        gap: calc(8 / 16 * 1rem);

        &.cs-disabled {
          opacity: 0.5;

          .cs-icon {
            filter: grayscale(1) brightness(300%);
          }
        }
      }

      .cs-icon {
        width: calc(24 / 16 * 1rem);
        height: auto;
        filter: grayscale(1);
        opacity: 0.5;
        display: block;
      }

      .button-solid {
        width: 100%;
      }

      .cs-button-transparent {
        font-size: calc(16 / 16 * 1rem);

        /* 46px - 56px */
        line-height: clamp(2.875rem, 5.5vw, 3.5rem);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: var(--primary);
        min-width: calc(150 / 16 * 1rem);
        padding: 0 calc(24 / 16 * 1rem);
        background-color: transparent;
        border: 1px solid var(--primary);
        border-radius: calc(4 / 16 * 1rem);
        display: inline-block;
        position: relative;
        z-index: 1;

        /* prevents padding from adding to the width */
        box-sizing: border-box;
        transition:
          color 0.3s,
          border-color 0.3s,
          background-color 0.3s;

        &::before {
          content: '';
          position: absolute;
          height: 100%;
          width: 0%;
          background: #000;
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          border-radius: calc(4 / 16 * 1rem);
          transition: width 0.3s;
        }

        &:hover {
          color: #fff;
          border-color: #000;
          background-color: #000;

          &::before {
            width: 100%;
          }
        }
      }

      .cs-waves-wrapper {
        width: 100vw;
        height: 60%;
        display: block;
        position: absolute;
        bottom: 0;
        left: 50%;
        z-index: -1;
        transform: translateX(-50%);

        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (width >= 48rem) {
    #pricing-1260 {
      .cs-container {
        max-width: calc(1280 / 16 * 1rem);

        /* remove the position so the svg waves wrapper can be positioned relative to the section container for tablet so it hugs the right edge of the screen. We set it back to relative at 1024px so it can then be positioned relative to the container again so it hugs the right edge of the container with the pricing cards */
        position: initial;
      }

      .cs-card-group {
        flex-flow: row nowrap;
        justify-content: center;
        align-items: stretch;
      }

      .cs-item {
        width: 50%;
        border-radius: calc(24 / 16 * 1rem) 0 0 calc(24 / 16 * 1rem);

        &.cs-popular {
          border-radius: 0 calc(24 / 16 * 1rem) calc(24 / 16 * 1rem) 0;
        }
      }

      .cs-waves-wrapper {
        /* changes to 740px at large desktop */
        width: 55vw;
        height: 100%;
        inset: 0 0 auto auto;
        transform: none;
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (width >= 64rem) {
    #pricing-1260 {
      .cs-container {
        max-width: calc(1280 / 16 * 1rem);
        position: relative;
        z-index: 1;
      }

      .cs-waves-wrapper {
        height: 140%;
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }

  /* Large Desktop - 1300px */
  @media only screen and (width >= 81.25rem) {
    #pricing-1260 {
      .cs-container {
        flex-direction: row;
        justify-content: space-between;
        gap: calc(20 / 16 * 1rem);
      }

      .cs-card-group {
        width: 62%;
        max-width: calc(740 / 16 * 1rem);
      }

      .cs-waves-wrapper {
        max-width: calc(740 / 16 * 1rem);
        width: 100%;
      }
    }
  }

  /* Dark Mode */
  @media only screen and (width >= 0) {
    body.dark-mode {
      #pricing-1260 {
        .cs-title,
        .cs-text,
        .cs-package,
        .cs-li,
        .cs-item-text,
        .cs-price,
        .cs-duration {
          color: var(--bodyTextColorWhite);
        }

        .cs-text,
        .cs-item-text,
        .cs-li {
          opacity: 0.8;
        }

        .cs-item {
          background-color: var(--dark);
          border-color: rgb(255 255 255 / 20%);

          &.cs-popular {
            background-color: var(--primary);

            .cs-picture {
              &::before {
                background-color: #fff;
              }

              .cs-picture-icon {
                filter: grayscale(1) brightness(1000%);
              }
            }

            .cs-popular-tag {
              color: var(--bodyTextColorWhite);

              &::before {
                background-color: #14142b;
                opacity: 1;
              }
            }

            .cs-package,
            .cs-li,
            .cs-item-text,
            .cs-price,
            .cs-duration {
              color: var(--headerColor);
            }

            .cs-icon {
              filter: grayscale(1) brightness(1000%);
              opacity: 1;
            }

            .cs-button-transparent {
              color: var(--primary);
              background-color: #fff;

              &::before {
                background-color: #1a1a1a;
              }
            }
          }
        }

        .cs-icon {
          filter: none;
          opacity: 1;
        }

        .cs-button-solid {
          transition: color 0.3s;

          &:hover {
            color: var(--primary);
          }

          &::before {
            background-color: #fff;
          }
        }
      }
    }
  }
</style>
