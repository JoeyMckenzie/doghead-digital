---
import { Icon } from 'astro-icon/components';
import config from '~/config';
import Logo from './shared/Logo.astro';
import { Image } from 'astro:assets';
import logoLight from '~/assets/images/logo_light.svg';
import logoDark from '~/assets/images/logo_dark.svg';

function getActiveClass(route: string) {
  const pathname = new URL(Astro.request.url).pathname;
  const currentPath = pathname.slice(1);
  return currentPath === route ? 'cs-li-link cs-active' : 'cs-li-link';
}
---

<header id="cs-navigation" :class="$store.global.expanded && 'cs-active'">
  <div class="cs-top-bar">
    <div class="cs-top-container">
      <div class="cs-top-contact">
        <a href={config.mailto} class="cs-top-link">
          <Icon
            class="cs-link-icon"
            width={12}
            height={12}
            name="mdi:email-outline"
            aria-hidden="true"
          />
          {config.email}
        </a>
        <a href={config.tel} class="cs-top-link">
          <Icon
            class="cs-link-icon"
            width={12}
            height={12}
            name="ph:phone"
            aria-hidden="true"
          />
          {config.phone}
        </a>
      </div>
      <div class="cs-top-social">
        <a href={config.socials?.instagram} class="cs-social-link">
          <Icon
            class="cs-social-icon"
            width={12}
            height={12}
            name="mdi:instagram"
            aria-hidden="true"
          />
        </a>
      </div>
    </div>
  </div>
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <Image
        src={logoDark}
        alt="logo for dark mode"
        class="hidden dark:block h-8"
      />
      <Image
        src={logoLight}
        alt="logo for light mode"
        class="block dark:hidden h-8"
      />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button
        :class="$store.global.expanded ? 'cs-toggle cs-active' : 'cs-toggle'"
        aria-label="mobile menu toggle"
        @click="$store.global.expanded = !$store.global.expanded"
      >
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class="cs-ul-wrapper">
        <ul
          id="cs-expanded"
          class="cs-ul"
          :aria-expanded="$store.global.expanded ? 'true' : 'false'"
        >
          <li class="cs-li">
            <a href="/" class={getActiveClass('')}> Home </a>
          </li>
          <li class="cs-li">
            <a href="/about" class={getActiveClass('about')}> About </a>
          </li>
          <li
            class="cs-li cs-dropdown"
            :class="submenuExpanded && 'cs-active'"
            tabindex="0"
            x-data="{ submenuExpanded: false }"
          >
            <span
              class={getActiveClass('pricing')}
              @click="submenuExpanded = !submenuExpanded"
            >
              Services
              <Icon class="cs-drop-icon" size={15} name="mdi:chevron-down" />
            </span>
            <ul class="cs-drop-ul">
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Web Design & Development</a
                >
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Performance & SEO</a>
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Domain Hosting & Support</a
                >
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Copywriting</a>
              </li>
            </ul>
          </li>
          <li class="cs-li">
            <a href="/services" class={getActiveClass('pricing')}> Pricing </a>
          </li>
          <li class="cs-li">
            <a href="/contact" class={getActiveClass('contact')}> Contact </a>
          </li>
        </ul>
      </div>
    </nav>
    <a href="/contact" class="cs-button-solid cs-nav-button">Get in Touch</a>
    <!--Dark Mode toggle, uncomment button code if you want to enable a dark mode toggle-->
    <button
      x-data
      @click="$store.global.toggle()"
      id="dark-mode-toggle"
      aria-label="dark mode toggle"
    >
      <svg
        class="cs-moon"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 480 480"
        style="enable-background:new 0 0 480 480"
        xml:space="preserve"
        ><path
          d="M459.782 347.328c-4.288-5.28-11.488-7.232-17.824-4.96-17.76 6.368-37.024 9.632-57.312 9.632-97.056 0-176-78.976-176-176 0-58.4 28.832-112.768 77.12-145.472 5.472-3.712 8.096-10.4 6.624-16.832S285.638 2.4 279.078 1.44C271.59.352 264.134 0 256.646 0c-132.352 0-240 107.648-240 240s107.648 240 240 240c84 0 160.416-42.688 204.352-114.176 3.552-5.792 3.04-13.184-1.216-18.496z"
        ></path></svg
      >
      <img
        class="cs-sun"
        aria-hidden="true"
        src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fsun.svg"
        decoding="async"
        alt="moon"
        width="15"
        height="15"
      />
    </button>
  </div>

  <style lang="scss">
    /* Mobile - 360px */
    @media only screen and (width >= 0) {
      body.dark-mode {
        #dark-mode-toggle {
          .cs-sun {
            opacity: 1;
            transform: translate(-50%, -50%);
          }

          .cs-moon {
            opacity: 0;
            transform: translate(-50%, -150%);
          }
        }
      }

      #dark-mode-toggle {
        width: calc(48 / 16 * 1rem);
        height: calc(48 / 16 * 1rem);
        padding: 0;
        background: transparent;
        border: none;
        display: block;
        position: absolute;
        right: calc(90 / 16 * 1rem);
        bottom: calc(16 / 16 * 1rem);
        z-index: 1000;
        overflow: hidden;

        img,
        svg {
          width: calc(20 / 16 * 1rem);
          height: calc(20 / 16 * 1rem);

          // center image inside button
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          pointer-events: none;
        }

        .cs-moon {
          z-index: 2;

          // Transition properties
          transition:
            transform 0.3s,
            opacity 0.3s;
          fill: #1a1a1a;
        }

        .cs-sun {
          opacity: 0;
          z-index: 1;

          // Transition property
          transform: translate(-50%, 100%);
          transition:
            transform 0.3s,
            opacity 0.3s;
        }
      }
    }

    /* Tablet - 768px */
    @media only screen and (width >= 48rem) {
      #dark-mode-toggle {
        margin-left: calc(16 / 16 * 1rem);
        order: 3;
        position: relative;
        right: auto;
        bottom: auto;
      }
    }

    /* Desktop - 1024px */
    @media only screen and (width >= 64rem) {
      #dark-mode-toggle {
        margin: 0;
        position: relative;
        right: auto;
        bottom: auto;
        transform: none;

        &:hover {
          cursor: pointer;
        }
      }
    }

    /* Mobile - 1023px */
    @media only screen and (width <= 1023px) {
      body {
        &.cs-open {
          overflow: hidden;
        }

        &.scroll {
          #cs-navigation {
            /* 53px, same height as the cs-top-container */
            transform: translateY(-3.3125rem);
          }
        }
      }

      #cs-navigation {
        width: 100%;

        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        background-color: #fff;
        box-shadow: rgb(149 157 165 / 20%) 0 8px 24px;
        position: fixed;
        z-index: 10000;
        transition: transform 0.3s;

        &::before {
          content: '';
          width: 100%;
          height: 0;
          background: rgb(0 0 0 / 60%);
          opacity: 0;
          display: block;
          position: absolute;
          top: 100%;
          right: 0;
          z-index: -1100;
          transition:
            height 0.5s,
            opacity 0.5s;
          backdrop-filter: blur(10px);
        }

        &.cs-active {
          &::before {
            height: 150vh;
            opacity: 1;
          }

          .cs-ul-wrapper {
            opacity: 1;
            transform: scaleY(1);
            transition-delay: 0.15s;
          }

          .cs-li {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .cs-top-bar {
          width: 100%;
          display: flex;
          justify-content: center;
          align-items: center;
        }

        .cs-top-container {
          width: 100%;

          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          padding: calc(16 / 16 * 1rem) calc(24 / 16 * 1rem);
          background-color: #f7f7f7;
          display: flex;
          justify-content: space-between;
          align-items: center;
          gap: calc(16 / 16 * 1rem);
        }

        .cs-top-contact {
          width: auto;

          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          display: flex;
          justify-content: center;
          align-items: center;

          /* 16px - 24px */
          gap: clamp(1rem, 2vw, 1.5rem);
        }

        .cs-top-link {
          font-size: calc(14 / 16 * 1rem);
          line-height: 1.5em;
          text-decoration: none;
          margin: 0;
          color: var(--bodyTextColor);
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: calc(8 / 16 * 1rem);
          position: relative;

          &:nth-of-type(2) {
            display: none;
          }
        }

        .cs-link-icon {
          width: calc(16 / 16 * 1rem);
          height: auto;
          display: block;
        }

        .cs-top-social {
          opacity: 1;
          display: flex;
          visibility: visible;
          justify-content: center;
          align-items: center;
          gap: calc(8 / 16 * 1rem);
          transition:
            opacity 0.3s,
            visibility 0.3s,
            height 0.3s;
        }

        .cs-social-link {
          text-decoration: none;
          display: flex;
          justify-content: center;
          align-items: center;
          gap: calc(16 / 16 * 1rem);
        }

        .cs-social-icon {
          color: gray;
          width: calc(20 / 16 * 1rem);
          height: auto;
          display: block;
        }

        .cs-container {
          width: 100%;

          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          padding: calc(20 / 16 * 1rem) calc(16 / 16 * 1rem);
          display: flex;
          justify-content: flex-end;
          align-items: center;
          position: relative;
        }

        .cs-logo {
          width: auto;
          height: calc(40 / 16 * 1rem);
          margin: 0 auto 0 0;

          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          padding: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          order: 1;
          z-index: 10;

          img {
            width: auto;
            height: 100%;

            /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
            object-fit: contain;
          }
        }

        .cs-nav {
          order: 2;
        }

        .cs-toggle {
          width: calc(46 / 16 * 1rem);
          height: calc(46 / 16 * 1rem);
          margin: 0 0 0 auto;
          background-color: var(--primary);
          border: none;
          border-radius: 0.25rem;
          display: flex;
          justify-content: center;
          align-items: center;
          transition: transform 0.6s;

          &.cs-active {
            transform: rotate(180deg);
          }
        }

        .cs-active {
          .cs-line1 {
            top: 50%;
            transform: translate(-50%, -50%) rotate(225deg);
          }

          .cs-line2 {
            top: 50%;
            transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
            transform-origin: center;
          }

          .cs-line3 {
            opacity: 0;
            bottom: 100%;
          }
        }

        .cs-box {
          /* 24px - 28px */
          width: clamp(1.5rem, 2vw, 1.75rem);
          height: calc(12 / 16 * 1rem);
          position: relative;
        }

        .cs-line {
          width: 100%;
          height: 2px;
          background-color: #fafbfc;
          border-radius: 2px;
          position: absolute;
          left: 50%;
          transform: translateX(-50%);
        }

        .cs-line1 {
          top: 0;
          transition:
            transform 0.5s,
            top 0.3s,
            left 0.3s;
          animation-duration: 0.7s;
          animation-timing-function: ease;
          animation-direction: normal;
          animation-fill-mode: forwards;
          transform-origin: center;
        }

        .cs-line2 {
          top: 50%;
          transform: translateX(-50%) translateY(-50%);
          transition:
            top 0.3s,
            left 0.3s,
            transform 0.5s;
          animation-duration: 0.7s;
          animation-timing-function: ease;
          animation-direction: normal;
          animation-fill-mode: forwards;
        }

        .cs-line3 {
          bottom: 0;
          transition:
            bottom 0.3s,
            opacity 0.3s;
        }

        .cs-ul-wrapper {
          width: 100%;
          height: auto;
          padding-bottom: calc(48 / 16 * 1rem);
          background-color: #fff;
          box-shadow: inset rgb(0 0 0 / 20%) 0 8px 24px;
          opacity: 0;
          position: absolute;
          top: 100%;
          left: 0;
          z-index: -1;
          overflow: hidden;
          transform: scaleY(0);
          transition:
            transform 0.4s,
            opacity 0.3s;
          transform-origin: top;
        }

        .cs-ul {
          width: 100%;
          height: auto;
          max-height: 65vh;
          margin: 0;
          padding: calc(48 / 16 * 1rem) 0 0;
          display: flex;
          flex-direction: column;
          justify-content: flex-start;
          align-items: center;
          gap: calc(20 / 16 * 1rem);
          overflow: scroll;
        }

        .cs-li {
          text-align: center;
          list-style: none;
          width: 100%;
          margin-right: 0;
          opacity: 0;

          /* transition from these values */
          transform: translateY(-4.375rem);
          transition:
            transform 0.6s,
            opacity 0.9s;

          &:nth-of-type(1) {
            transition-delay: 0.05s;
          }

          &:nth-of-type(2) {
            transition-delay: 0.1s;
          }

          &:nth-of-type(3) {
            transition-delay: 0.15s;
          }

          &:nth-of-type(4) {
            transition-delay: 0.2s;
          }

          &:nth-of-type(5) {
            transition-delay: 0.25s;
          }

          &:nth-of-type(6) {
            transition-delay: 0.3s;
          }

          &:nth-of-type(7) {
            transition-delay: 0.35s;
          }

          &:nth-of-type(8) {
            transition-delay: 0.4s;
          }

          &:nth-of-type(9) {
            transition-delay: 0.45s;
          }

          &:nth-of-type(10) {
            transition-delay: 0.5s;
          }

          &:nth-of-type(11) {
            transition-delay: 0.55s;
          }

          &:nth-of-type(12) {
            transition-delay: 0.6s;
          }

          &:nth-of-type(13) {
            transition-delay: 0.65s;
          }
        }

        .cs-li-link {
          /* 16px - 24px */
          font-size: clamp(1rem, 2.5vw, 1.5rem);
          line-height: 1.2em;
          text-decoration: none;
          margin: 0;
          color: var(--headerColor);
          display: inline-block;
          position: relative;

          &.cs-active {
            color: var(--primary);
          }

          &:hover {
            color: var(--primary);
          }
        }

        .cs-button-solid {
          display: none;
        }
      }
    }

    /* Tablet - 768px */
    @media only screen and (width >= 48rem) {
      #cs-navigation {
        .cs-top-link {
          &:nth-of-type(2) {
            display: flex;
          }
        }
      }
    }

    /* Dark Mode */
    @media only screen and (width <= 1023px) {
      body.dark-mode {
        #cs-navigation {
          background-color: var(--dark);

          .cs-logo {
            /* makes it white */
            filter: grayscale(1) brightness(1000%);
          }

          .cs-top-container {
            background-color: rgb(0 0 0 / 20%);
          }

          .cs-top-link,
          .cs-desc {
            color: var(--bodyTextColorWhite);
            opacity: 0.8;
          }

          .cs-link-icon {
            filter: grayscale(1) brightness(1000%);
          }

          .cs-ul-wrapper {
            background-color: var(--medium);
          }

          .cs-li-link,
          .cs-header {
            color: var(--bodyTextColorWhite);
          }
        }
      }
    }

    /* -- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- - */

    /* Mobile - 1023px */
    @media only screen and (width <= 1023px) {
      #cs-navigation {
        .cs-li {
          text-align: center;
          width: 100%;
          display: block;
        }

        .cs-dropdown {
          color: var(--bodyTextColorWhite);
          position: relative;

          &.cs-active {
            .cs-drop-ul {
              height: auto;
              margin: calc(12 / 16 * 1rem) 0 0;
              padding: calc(12 / 16 * 1rem) 0;
              opacity: 1;
              visibility: visible;
            }

            .cs-drop-link {
              opacity: 1;
            }
          }

          .cs-li-link {
            position: relative;
            transition: opacity 0.3s;
          }
        }

        .cs-drop-icon {
          width: calc(15 / 16 * 1rem);
          height: auto;
          position: absolute;
          top: 50%;
          right: calc(-20 / 16 * 1rem);
          transform: translateY(-50%);
        }

        .cs-drop-ul {
          width: 100%;
          height: 0;
          margin: 0;
          padding: 0;
          background-color: var(--primary);
          opacity: 0;
          display: flex;
          visibility: hidden;
          flex-direction: column;
          justify-content: flex-start;
          align-items: center;
          gap: calc(12 / 16 * 1rem);
          overflow: hidden;
          transition:
            padding 0.3s,
            margin 0.3s,
            height 0.3s,
            opacity 0.3s,
            visibility 0.3s;
        }

        .cs-drop-li {
          list-style: none;
        }

        .cs-li-link {
          &.cs-drop-link {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 2vw, 1.25rem);
            color: #fff;
          }
        }
      }
    }

    /* Desktop - 1024px */
    @media only screen and (width >= 64rem) {
      #cs-navigation {
        .cs-dropdown {
          position: relative;

          &:hover {
            cursor: pointer;

            .cs-drop-ul {
              opacity: 1;
              visibility: visible;
              transform: scaleY(1);
            }

            .cs-drop-li {
              opacity: 1;
              transform: translateY(0);
            }
          }
        }

        .cs-drop-icon {
          width: calc(12 / 16 * 1rem);
          height: auto;
          margin-left: calc(4 / 16 * 1rem);
          display: inline-block;
        }

        .cs-drop-ul {
          min-width: calc(200 / 16 * 1rem);
          margin: 0;
          padding: 0;
          background-color: #fff;
          box-shadow: rgb(149 157 165 / 20%) 0 10px 16px;
          opacity: 0;
          border-bottom: 5px solid var(--primary);
          visibility: hidden;

          /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
          // columns: 2;
          position: absolute;
          top: 100%;
          z-index: -100;
          overflow: hidden;
          transform: scaleY(0);
          transition:
            transform 0.3s,
            visibility 0.3s,
            opacity 0.3s;
          transform-origin: top;
        }

        .cs-drop-li {
          font-size: calc(16 / 16 * 1rem);
          text-decoration: none;
          list-style: none;
          width: 100%;
          height: auto;
          opacity: 0;
          display: block;
          transform: translateY(calc(-10 / 16 * 1rem));
          transition:
            opacity 0.6s,
            transform 0.6s;

          &:nth-of-type(1) {
            transition-delay: 0.05s;
          }

          &:nth-of-type(2) {
            transition-delay: 0.1s;
          }

          &:nth-of-type(3) {
            transition-delay: 0.15s;
          }

          &:nth-of-type(4) {
            transition-delay: 0.2s;
          }

          &:nth-of-type(5) {
            transition-delay: 0.25s;
          }

          &:nth-of-type(6) {
            transition-delay: 0.3s;
          }

          &:nth-of-type(7) {
            transition-delay: 0.35s;
          }

          &:nth-of-type(8) {
            transition-delay: 0.4s;
          }

          &:nth-of-type(9) {
            transition-delay: 0.45s;
          }

          &:nth-of-type(10) {
            transition-delay: 0.5s;
          }

          &:nth-of-type(11) {
            transition-delay: 0.55s;
          }

          &:nth-of-type(12) {
            transition-delay: 0.6s;
          }

          &:nth-of-type(13) {
            transition-delay: 0.65s;
          }
        }

        .cs-li-link {
          &.cs-drop-link {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            text-decoration: none;
            white-space: nowrap;
            width: 100%;

            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            padding: calc(12 / 16 * 1rem);
            color: var(--bodyTextColor);
            display: block;
            transition:
              color 0.3s,
              background-color 0.3s;

            &:hover {
              color: var(--primary);
              background-color: #f7f7f7;
            }

            &::before {
              display: none;
            }
          }
        }
      }
    }

    /* Dark Mode */
    @media only screen and (width >= 0) {
      body.dark-mode {
        #cs-navigation {
          .cs-drop-ul {
            background-color: var(--dark);
          }

          .cs-drop-icon {
            filter: grayscale(1) brightness(1000%);
          }

          .cs-li-link {
            &.cs-drop-link {
              &:hover {
                color: var(--bodyTextColorWhite);
                background-color: rgb(255 255 255 / 20%);
              }

              &::before {
                display: none;
              }
            }
          }
        }
      }
    }

    /* -- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- - */

    /* Small Desktop - 1024px */
    @media only screen and (width >= 64rem) {
      body.scroll {
        #cs-navigation {
          /* 53px, the ssme height as the cs-top-container */
          transform: translateY(-3.3125rem);
        }
      }

      #cs-navigation {
        width: 100%;

        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        padding: 0;
        background-color: #fff;
        box-shadow: rgb(149 157 165 / 20%) 0 8px 24px;
        position: fixed;
        z-index: 10000;
        transition: transform 0.3s;

        .cs-top-bar {
          width: 100%;
          display: flex;
          justify-content: center;
          align-items: center;
        }

        .cs-top-container {
          width: 100%;
          max-width: calc(1280 / 16 * 1rem);

          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          padding: calc(16 / 16 * 1rem);
          display: flex;
          justify-content: space-between;
          align-items: center;
          gap: calc(50 / 16 * 1rem);
          position: relative;
          z-index: 1;

          &::before {
            /* grey background */
            content: '';
            width: 100vw;
            height: 100%;
            background: #f7f7f7;
            opacity: 1;
            display: block;
            position: absolute;
            top: 0;
            left: 50%;
            z-index: -1;
            transform: translateX(-50%);
          }
        }

        .cs-top-contact {
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: calc(24 / 16 * 1rem);
        }

        .cs-top-link {
          font-size: calc(14 / 16 * 1rem);
          line-height: 1.5em;
          text-decoration: none;
          margin: 0;
          color: var(--bodyTextColor);
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: calc(8 / 16 * 1rem);
          position: relative;

          &:hover {
            text-decoration: underline;
          }
        }

        .cs-link-icon {
          width: calc(16 / 16 * 1rem);
          height: auto;
          display: block;
        }

        .cs-top-social {
          display: flex;
          justify-content: center;
          align-items: center;
          gap: calc(16 / 16 * 1rem);
        }

        .cs-social-link {
          text-decoration: none;
          display: flex;
          justify-content: center;
          align-items: center;
          transition: transform 0.3s;

          &:hover {
            transform: scale(1.1);
          }
        }

        .cs-social-icon {
          color: gray;
          width: calc(20 / 16 * 1rem);
          height: auto;
          display: block;
        }

        .cs-container {
          width: 100%;
          max-width: calc(1280 / 16 * 1rem);
          margin: auto;

          /* prevents padding from affectin gheight */
          box-sizing: border-box;
          padding: 0 calc(16 / 16 * 1rem);
          display: flex;
          justify-content: flex-end;
          align-items: center;
          gap: calc(24 / 16 * 1rem);
          position: relative;
        }

        .cs-toggle {
          display: none;
        }

        .cs-logo {
          /* 40px - 44px */
          height: clamp(2.5rem, 4vw, 2.75rem);

          /* margin-right auto pushes everything away from it to the right */
          margin: 0 auto 0 0;
          padding: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 100;

          img {
            width: auto;
            height: 100%;

            /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
            object-fit: contain;
          }
        }

        .cs-ul {
          width: 100%;
          margin: 0;
          padding: 0;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: calc(48 / 16 * 1rem);
        }

        .cs-li {
          list-style: none;
          padding: calc(31 / 16 * 1rem) 0;

          /* prevent flexbox from squishing it */
          flex: none;
        }

        .cs-li-link {
          /* 14px - 16px */
          font-size: clamp(0.875rem, 1.3vw, 1rem);
          line-height: 1.5em;
          text-decoration: none;
          margin: 0;
          color: var(--headerColor);
          display: block;
          position: relative;
          transition: color 0.3s;

          &:hover {
            color: var(--primary);
          }

          &.cs-active {
            font-weight: 700;
            color: var(--primary);
          }
        }

        .cs-button-solid {
          font-size: calc(16 / 16 * 1rem);
          font-weight: 700;

          /* 46px - 56px */
          line-height: clamp(2.875em, 5.5vw, 3.5em);
          text-align: center;
          text-decoration: none;
          margin: 0;

          /* prevents padding from adding to the width */
          box-sizing: border-box;
          padding: 0 calc(32 / 16 * 1rem);
          color: #fff;
          background-color: var(--primary);
          display: inline-block;
          position: relative;
          z-index: 1;
          overflow: hidden;
          transition: color 0.3s;

          &::before {
            content: '';
            width: 0%;
            height: 100%;
            background: #1a1a1a;
            opacity: 1;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            transition: width 0.3s;
          }

          &:hover {
            &::before {
              width: 100%;
            }
          }
        }

        .cs-nav-button {
          line-height: calc(46 / 16 * 1rem);
          margin-left: calc(24 / 16 * 1rem);
        }
      }
    }

    /* Dark Mode */
    @media only screen and (width >= 64rem) {
      body.dark-mode {
        #cs-navigation {
          background-color: var(--dark);

          .cs-top-container {
            &::before {
              background-color: rgb(0 0 0 / 20%);
            }
          }

          .cs-li-link,
          .cs-top-link {
            color: var(--bodyTextColorWhite);

            &:hover {
              color: var(--secondary);
            }
          }

          .cs-logo,
          .cs-link-icon {
            /* turns it white */
            filter: grayscale(1) brightness(1000%);
          }
        }
      }
    }
  </style>
</header>
